<link rel="stylesheet" href="@App.Path/assets/style.css" />
@{
    var termGroups = ((IEnumerable<dynamic>)AsDynamic(Data["Default"]))
        .OrderBy(t => t.Title)                              // sort terms
        .GroupBy(l => l.Title.Substring(0, 1).ToUpper())    // group by first letter
        .OrderBy(s => s.Key);                               // ensure sorting at group-level
    var detailPage = App.Settings.DetailPage;
}

<div class="ly-maxwrapper-white">
    <div class="container-fluid">
        <div class="ly-container-inner">
            <div class="sc-element">
                <div class="app-glossary ly-maxwrapper-white">
                    @Edit.Toolbar(Content)
                    <nav class="navbar navbar-default">
                        <div class="navbar-header">
                            <span>@App.Resources.GlossaryMenu</span>
                            <a href="#" class="collapsed app-glossary-toggle js-app-glossary-toggle" title="@App.Resources.GlossaryMenu" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false"></a>
                        </div>
                        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                            <ul class="nav navbar-nav app-glossary-letterlist">
                                @foreach(var grp in termGroups) {
                                    <li>
                                        <a href="#@grp.Key">@grp.Key</a>
                                    </li>
                                }
                            </ul>
                        </div>
                    </nav>
                    <div class="app-glossary-terms">

                        @foreach (var grp in termGroups)
                        {
                            <h2 id="@grp.Key">@grp.Key</h2>
                            foreach (var term in grp)
                            {
                                <div class="sc-element">
                                    <div class="app-glossary-single-term">
                                        <strong>@((String.IsNullOrEmpty(term.Abbreviation) == false) ? @term.Abbreviation + " â€“ " : "")@term.Title</strong>
                                        <p>@term.Summary</p>
                                        @Edit.Toolbar(term)
                                        @* link created as requested by PM. Will be changed to @Link.To(parameters: "term=" + term.UrlKey) for standardised app. *@
                                        <a href="@App.Settings.DetailPage/term/@term.UrlKey">@App.Resources.MoreText</a>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript" src="@App.Path/assets/scripts.js"></script>
